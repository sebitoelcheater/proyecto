Acá guardaremos todo el código relacionado al controlador que programará Ariel

Lo primero es que el controlador en si es una abstracción de las cosas que usaremos en nuestra aplicación, y además hacen el enlace con los datos, cosa de mucha utilidad, pues nos tenemos que ahorrar escribir métodos en SQL a cada rato en las actividades.

El controlador consta de tres clases
- Controlador
- Curso
- Modulo

La clase controlador, no es una abstracción, sino que más bien representa una biblioteca de métodos de utilería al desarrollar la aplicación, los cuales retornan cosas, pero que son objetos, Curso o Modulo o una lista de ella, según la función, por lo tanto, para acceder a estos métodos los llamaremos así : Controlador.nombredelmetodo(argumentos)

NOTA: He usado en el Controlador, y en las otras dos clases el objeto Calendar, pues es un estandar para representar tiempo, para más información : http://docs.oracle.com/javase/6/docs/api/

Los métodos que hasta ahora hay en la clase Controlador son :

- static public Curso crearNuevoCurso(Context context, String nombre), que crea un nuevo curso en los datos y retorna el objeto correspondiente

- static public Curso obtenerCurso(Context context, String id), que retorna el curso asociado al id indicado

- static public Modulo crearNuevoModulo(Context context,int diaDeLaSemana, Calendar inicio, Calendar fin, String nombre, String idCurso) , que crea un nuevo modulo en los datos y retorna el objeto modulo asociado.

- static public ArrayList<Curso> obtenerCursos(Context context), que retorna la lista de todos los cursos(objetos Curso) que se tienen en el celular

- static public ArrayList<Curso> obtenerCursosComentables(Context context), lo mismo que el anterior, pero solo los cursos comentables

- static public ArrayList<Modulo> obtenerModulos(Context context), que retorna una lista con todos los modulos(objetos Modulo) que se tienen en el celular

- static public ArrayList<Modulo> obtenerModulosSegunDia(Context context, int dia), lo mismo que el anterior, pero solo los módulos que se encuentran en el dia indicado

- static public ArrayList<Modulo> obtenerModulosDelDia(Context context, Calendar hoydia), igual que el anterio, solo cambia el parametro

- static public ArrayList<Modulo> obtenerLosSiguientesModulos(Context context, Calendar ahora, int largo), retorna los "largo" modulos despues de ahora

- static public ArrayList<Modulo> obtenerLosSiguientesModulosDelDia(Context context, Calendar ahora, int largo), retorna los "largo" modulos despues de ahora , en el dia correspondiente

- static public ArrayList<Modulo> obtenerLosModulosProximosInicio(Context context,Calendar ahora, int minutos), retorna los modulos que tienen su inicio minutos despues de ahora

- static public ArrayList<Modulo> obtenerLosModulosProximosFin(Context context,Calendar ahora, int minutos), retorna los modulos que tienen su fin minutos despues de ahora 

La clase Curso, es la abstracción de un Curso o Ramo, por lo tanto, en su estructura posee su id, nombre, el idMaster(de Internet), y si es o no comentable. Basicamente un Curso se creo en base a los datos, por lo tanto, ustedes tambien pueden recuperar un curso desde los datos con el contructor de Curso, dando el contexto y el id.
NOTA : No olvidar que a los métodos de un determinado objeto se accede asi : nombreDelObjeto.nombreDelMetodo(argumentos)
Los métodos que hay en Curso, son relativamente simples y se pueden resumir en :

- Métodos de obtención, que retornan los atributos del curso son: 
                public String obtenerId()
		public String obtenerNombre()
		public String obtenerIdMaster()
		public boolean obtenerComentable()

- Métodos de cambio, que cambian el atributo tanto en el objeto como en los datos y son :
                public boolean establecerNombre(Context context,String nuevoNombre)
		public boolean establecerIdMaster(Context context, String idMaster)
		public boolean establecerComentable(Context context, boolean comentable)

- public boolean borrarCurso(Context context), que borra de los datos el curso y los los modulos asociados a el

Finalmente, la clase Modulo, lo que representa es un modulo y en su estructura contiene un id, un id del curso relacionado, un nombre, un dia de la semana, un inicio y un fin, al igual que en el objeto Curso, un Modulo tambien se crea en base a los datos, además pueden usar el contructor de módulo dándole el contexto y el id lo que rescata los datos de la base de datos,y sus métodos se pueden resumir en : 

- Métodos de obtención, que retornan los atributos del curso son: 
        public String obtenerId()
	public String obtenerIdCurso()
	public String obtenerNombre()
	public String obtenerDiaDeLaSemana()
	public Calendar obtenerInicio()
	public Calendar obtenerFin()
	
- Métodos de cambio, que cambian el atributo tanto en el objeto como en los datos y son :
        public boolean estableceIdCurso(Context context,String idCurso) 
	public boolean establecerNombre(Context context,String nuevoNombre)
	public boolean establecerInicio(Context context, Calendar inicio)
	public boolean establecerFin(Context context,Calendar fin)
	public boolean establecerDiaDeLaSemana(Context context, int dia) 
	public boolean borrarModulo(Context context)
