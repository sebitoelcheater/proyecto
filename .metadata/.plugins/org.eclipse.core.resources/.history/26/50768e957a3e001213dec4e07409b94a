package com.example.version2;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.example.controlador.Controlador;
import com.example.controlador.Curso;
import com.example.controlador.DisplaySupport;
import com.example.controlador.Modulo;

import android.os.Bundle;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.AbsoluteLayout;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.SimpleAdapter;
import android.widget.Spinner;
import android.widget.TextView;
import android.view.WindowManager;

//ESTO TRABAJA EN PIXELES

public class ActividadHorarioSemanal2 extends Activity {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        
        FrameLayout fl = new FrameLayout(this);  
        fl.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
        setContentView(fl);
        
        
		dibujaLasLineas(fl);	
		fl.addView(new ViewEstatica(this));
		rellenarModulos();
        
       
        
        
        
    }
    
   
    private void dibujaLasLineas(FrameLayout fl) {
		// TODO Auto-generated method stub
    	LinearLayout ln = new LinearLayout(this);
        ln.addView(new Lienzo(this));
        fl.addView(ln);
		
	}


	private void rellenarModulos() 
    {
	   	// TODO Auto-generated method stub
    	//LA RELACION ES 80dp  corresponde a 60 minutos 
    	double factor= (5.0/12.0);
    	int enQueVoy = 480;
    	LinearLayout l = (LinearLayout) findViewById(R.id.LinearLayoutLunes);
    	ArrayList<Modulo> modulosDia = Controlador.obtenerModulosSegunDia(this, 2);
		
    	for(Modulo m : modulosDia)
		{
    		Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		//EDITANDO
		
    	enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutMartes);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 3);
		for(Modulo m : modulosDia)
		{
Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		//EDITANDO
		
		
		
		
		enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutMiercoles);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 4);
		for(Modulo m : modulosDia)
		{
			
Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutJueves);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 5);
		for(Modulo m : modulosDia)
		{
            Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutViernes);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 6);
		for(Modulo m : modulosDia)
		{
			
            Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutSabado);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 7);
		for(Modulo m : modulosDia)
		{
			
			Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
		enQueVoy = 480;
		l = (LinearLayout) findViewById(R.id.LinearLayoutDomingo);
		modulosDia = Controlador.obtenerModulosSegunDia(this, 1);
		for(Modulo m : modulosDia)
		{
			
			Curso curso = new Curso(this,m.obtenerIdCurso()); 
    		
    		Calendar inicio = m.obtenerInicio();
			int minutos = inicio.get(Calendar.HOUR_OF_DAY)*60+inicio.get(Calendar.MINUTE);
			Calendar fin = m.obtenerFin();
			int duracionEnMinutos = fin.get(Calendar.HOUR_OF_DAY)*60+fin.get(Calendar.MINUTE) - minutos;
			if(enQueVoy<minutos)  //Y si enQueVoy=>minutos(ESTO NO DEBERIA PASAR....)
			{
				l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}
		
	}

	@Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_actividad_horario_semanal, menu);
        return true;
    }
	
}

class Lienzo extends View {

    public Lienzo(Context context) {
        super(context);
    }
    
    @SuppressLint("DrawAllocation")
	protected void onDraw(Canvas canvas) {
    	
    	/*
    	
    			l.addView(new TextView(this),new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*(minutos-enQueVoy)))));
				enQueVoy+= minutos-enQueVoy;
			}
				
			ViewModulo a = new ViewModulo(this);
			a.setHoraInicio(m.obtenerStringInicio());
			a.setHoraFin(m.obtenerStringFin());
			a.setSala(m.obtenerNombre());
			
			a.setNombre(curso.obtenerNombre().substring(0,3));
			String color = curso.obtenerColor();
			a.setColor(Color.rgb(Controlador.getRed(color), Controlador.getGreen(color), Controlador.getBlue(color)));
			l.addView(a,new LayoutParams(LayoutParams.FILL_PARENT,DisplaySupport.dipToPx(getApplicationContext(),(int)(factor*duracionEnMinutos))));
			enQueVoy+=duracionEnMinutos;
		}*/
    	//
    	int dato1 = DisplaySupport.dipToPx(this.getContext(),80);
    	int dato2 = DisplaySupport.dipToPx(this.getContext(),83);
    	int dato3 = DisplaySupport.dipToPx(this.getContext(),25);		
    	int dato4 = DisplaySupport.dipToPx(this.getContext(),25);
    	
    	canvas.drawRGB(255,255,255);
        int ancho=canvas.getWidth();
        int alto=canvas.getHeight();
        
        Paint pincel1=new Paint();
        pincel1.setARGB(255,255,0,0);            
        canvas.drawLine(73, 0, 73, alto, pincel1);
        canvas.drawLine(76, 0, 76, alto, pincel1);
        pincel1.setARGB(255,0,0,0);
        int cantLineas=14;
        for(int fila=0;fila<cantLineas;fila++) {
        	canvas.drawLine(0, fila*30+60, ancho, fila*30+60, pincel1);
        }
    }}
